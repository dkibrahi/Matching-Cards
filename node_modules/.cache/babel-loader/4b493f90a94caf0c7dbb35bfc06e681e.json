{"ast":null,"code":"var _jsxFileName = \"/Users/SuperGaming/Downloads/react-sept/Matching-Cards/matching-cards/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Card from './components/Card'; // styles \n\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": \"/img/helmet-1.png\"\n}, {\n  \"src\": \"/img/potion-1.png\"\n}, {\n  \"src\": \"/img/ring-1.png\"\n}, {\n  \"src\": \"/img/scroll-1.png\"\n}, {\n  \"src\": \"/img/shield-1.png\"\n}, {\n  \"src\": \"/img/sword-1.png\"\n}];\n\nfunction App() {\n  _s();\n\n  const [cards, setCards] = useState([]);\n  const [numTurns, setNumTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null); // handle a card choice\n\n  const handleChoice = card => {\n    if (choiceOne === null) {\n      choiceOne = card;\n    } else {\n      choiceTwo = card;\n    }\n  }; // shuffle the cards\n\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages] // two copies of each card\n    .sort(() => Math.random() - 0.5).map(card => ({ ...card,\n      id: Math.random()\n    })); // reset cards and turns\n\n    setCards(shuffledCards);\n    setNumTurns(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Magic Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        handleChoice: handleChoice\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cq4DTF6kbm7zxPT2nW20Ru83Tlw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Card","cardImages","App","cards","setCards","numTurns","setNumTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","handleChoice","card","shuffleCards","shuffledCards","sort","Math","random","map","id"],"sources":["/Users/SuperGaming/Downloads/react-sept/Matching-Cards/matching-cards/src/App.jsx"],"sourcesContent":["import { useState } from 'react';\nimport Card from './components/Card';\n\n// styles \nimport './App.css';\n\n\nconst cardImages = [\n  {\"src\": \"/img/helmet-1.png\"},\n  {\"src\": \"/img/potion-1.png\"},\n  {\"src\": \"/img/ring-1.png\"},\n  {\"src\": \"/img/scroll-1.png\"},\n  {\"src\": \"/img/shield-1.png\"},\n  {\"src\": \"/img/sword-1.png\"}\n]\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [numTurns, setNumTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n\n  // handle a card choice\n  const handleChoice = (card) => {\n    if (choiceOne === null) {\n      choiceOne = card;\n    }\n\n    else {\n      choiceTwo = card;\n    }\n\n  } \n\n  // shuffle the cards\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages] // two copies of each card\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.random()}))\n\n      // reset cards and turns\n      setCards(shuffledCards);\n      setNumTurns(0);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className=\"card-grid\">\n        {cards.map(card => (\n          <Card key={card.id} \n            card={card}\n            handleChoice={handleChoice}/>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,mBAAjB,C,CAEA;;AACA,OAAO,WAAP;;AAGA,MAAMC,UAAU,GAAG,CACjB;EAAC,OAAO;AAAR,CADiB,EAEjB;EAAC,OAAO;AAAR,CAFiB,EAGjB;EAAC,OAAO;AAAR,CAHiB,EAIjB;EAAC,OAAO;AAAR,CAJiB,EAKjB;EAAC,OAAO;AAAR,CALiB,EAMjB;EAAC,OAAO;AAAR,CANiB,CAAnB;;AASA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,CAAD,CAAxC;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C,CAJa,CAMb;;EACA,MAAMY,YAAY,GAAIC,IAAD,IAAU;IAC7B,IAAIL,SAAS,KAAK,IAAlB,EAAwB;MACtBA,SAAS,GAAGK,IAAZ;IACD,CAFD,MAIK;MACHH,SAAS,GAAGG,IAAZ;IACD;EAEF,CATD,CAPa,CAkBb;;;EACA,MAAMC,YAAY,GAAG,MAAM;IACzB,MAAMC,aAAa,GAAG,CAAC,GAAGb,UAAJ,EAAgB,GAAGA,UAAnB,EAA+B;IAA/B,CACnBc,IADmB,CACd,MAAMC,IAAI,CAACC,MAAL,KAAgB,GADR,EAEnBC,GAFmB,CAEdN,IAAD,KAAW,EAAE,GAAGA,IAAL;MAAWO,EAAE,EAAEH,IAAI,CAACC,MAAL;IAAf,CAAX,CAFe,CAAtB,CADyB,CAKvB;;IACAb,QAAQ,CAACU,aAAD,CAAR;IACAR,WAAW,CAAC,CAAD,CAAX;EACH,CARD;;EAUA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEO,YAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAIE;MAAK,SAAS,EAAC,WAAf;MAAA,UACGV,KAAK,CAACe,GAAN,CAAUN,IAAI,iBACb,QAAC,IAAD;QACE,IAAI,EAAEA,IADR;QAEE,YAAY,EAAED;MAFhB,GAAWC,IAAI,CAACO,EAAhB;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GA3CQjB,G;;KAAAA,G;AA6CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}